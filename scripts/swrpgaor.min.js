function addSkillDirective(e, i, t) {
    app.directive(t, function () {
        return {
            restrict: "A", link: function (l, a, n) {
                var s = 1;
                n[t] && (s = parseInt(n[t])), l.$parent.model.skills[e] = {rank: s, attribute: i}
            }
        }
    })
}

var module = angular.module("starship", []);
module.directive("vehicle", function () {
    return {
        templateUrl: "/views/vehicle.html",
        replace: !0,
        restrict: "E",
        transclude: !0,
        scope: {
            model: "=?",
            name: "@",
            silhouette: "=?",
            speed: "=?",
            handling: "=?",
            fore: "=?",
            aft: "=?",
            port: "=?",
            starboard: "=?",
            armor: "=?",
            system: "=?",
            hull: "=?",
            hardpoints: "=?",
            sensorRange: "@",
            price: "@",
            rarity: "=?",
            hardpoints: "=?",
            passengers: "=?",
            crew: "@",
            encum: "=?",
            navicomputer: "=?",
            hyperdrive: "@",
            maker: "@",
            type: "@",
            ship: "@",
            consumables: "@"
        },
        controller: ["$scope", function (e) {
            null == e.model && (e.model = {
                name: e.name,
                silhouette: e.silhouette || 3,
                speed: e.speed || 1,
                handling: e.handling || 0,
                fore: e.fore || 0,
                port: e.port || 0,
                starboard: e.starboard || 0,
                aft: e.aft || 0,
                armor: e.armor || 0,
                hull: e.hull || 10,
                system: e.system || 6,
                hardpoints: e.hardpoints || 0,
                sensorRange: e.sensorRange || "Close",
                price: e.price,
                rarity: e.rarity,
                passengers: e.passengers || 0,
                crew: e.crew || "One pilot",
                navicomputer: 1 == e.navicomputer ? "Yes" : "None",
                hyperdrive: e.hyperdrive || "none",
                maker: e.maker,
                type: e.type,
                ship: e.ship,
                consumables: e.consumables,
                encum: e.encum || 6,
                weapons: []
            }, e.model.handling > 0 && (e.model.handling = "+" + e.model.handling))
        }]
    }
}), module.directive("vehicleStatbar", function () {
    return {templateUrl: "/views/vehicle-statbar.html", restrict: "E", scope: {model: "=model"}, replace: !0}
}), module.directive("defenseBlock", function () {
    return {
        templateUrl: "/views/defense-block.html",
        restrict: "E",
        scope: {model: "=model"},
        controller: ["$scope", function (e) {
            e.model && e.model.silhouette < 4 && (e.model.port = "-", e.model.starboard = "-")
        }],
        replace: !0
    }
}), module.directive("starshipWeapon", ["$sce", function (e) {
    return {
        transclude: !0,
        reaplce: !0,
        restrict: "E",
        scope: {
            name: "@",
            damage: "=",
            critical: "=?",
            range: "@",
            blast: "=?",
            ion: "=?",
            guided: "=?",
            linked: "=?",
            breach: "=?",
            slowFiring: "=?slowFire",
            limitedAmmo: "=?ammo",
            fireArc: "=?arc"
        },
        link: function (i, t, l, a, n) {
            var s = {
                name: i.name,
                damage: i.damage,
                critical: i.critical,
                range: i.range || "Short",
                blast: i.blast,
                ion: i.ion,
                guided: i.guided,
                linked: i.linked,
                ammo: i.limitedAmmo,
                breach: i.breach,
                slowFiring: i.slowFiring,
                fireArc: i.fireArc || "Forward"
            };
            n(i, function (i, t) {
                for (var l = "", a = 0; a < i.length; a++) l += i[a].wholeText || i[a].outerHTML;
                s.text = e.trustAsHtml(l)
            });
            var r = i.$parent.$parent.model;
            null == r.weapons && (r.weapons = []), r.weapons.push(s)
        }
    }
}]), module.directive("starshipWeaponsBlock", ["getSkillStat", function (e) {
    return {templateUrl: "/views/starship-weapon.html", scope: {weapons: "=?weapons"}, replace: !0}
}]);
var app = angular.module("swaor", ["starship"]);
app.directive("skills", function () {
    return {
        replace: !0, restrict: "E", link: function (e, i, t) {
            null == e.$parent.model.skills && (e.$parent.model.skills = {}), e.skills = e.$parent.model.skills
        }
    }
}), app.directive("skillsBlock", function () {
    return {
        templateUrl: "/views/skills.html", replace: !0, restrict: "E", link: function (e, i, t) {
            e.skills = e.model.skills, e.skillKeys = function () {
                var i = [];
                for (k in e.model.skills) i.push(k);
                return i.sort()
            }, e.char = e.model, e.getAttr = function (i) {
                return e.char[e.skills[i].attribute]
            }
        }
    }
}), app.directive("skill", function () {
    return {
        templateUrl: "/views/skill.html",
        replace: !0,
        restrict: "E",
        scope: {name: "=", rank: "=", abty: "=", minion: "=?", hideRank: "=?"},
        controller: ["$scope", function (e) {
            e.pdice = new Array(e.rank), e.abty > e.rank ? (e.adice = new Array(e.abty - e.rank), e.pdice = new Array(e.rank)) : (e.adice = new Array(e.rank - e.abty), e.pdice = new Array(Math.min(e.rank, e.abty)))
        }]
    }
}), app.directive("statblock", function () {
    return {templateUrl: "/views/statblock.html", scope: {value: "=value", display: "@display"}, replace: !0}
}), app.directive("dynamic", ["$compile", function (e) {
    return {
        restrict: "A", replace: !0, link: function (i, t, l) {
            i.$watch(l.dynamic, function (l) {
                t.html(l), e(t.contents())(i)
            })
        }
    }
}]), app.directive("talentBlock", function () {
    return {templateUrl: "/views/talents.html", scope: {talents: "=?talents"}, replace: !0}
}), app.directive("talents", ["$sce", function (e) {
    return {
        transclude: !0, restrict: "E", link: function (i, t, l, a, n) {
            n(i, function (i, t) {
                for (var l = "", a = 0; a < i.length; a++) l += i[a].wholeText || i[a].outerHTML;
                t.$parent.model.talents = e.trustAsHtml(l)
            })
        }
    }
}]), app.directive("abilitiesBlock", function () {
    return {templateUrl: "/views/abilities.html", scope: {abilities: "=?abilities"}, replace: !0}
}), app.directive("equipmentBlock", ["getSkillStat", function (e) {
    return {
        templateUrl: "/views/equipment.html",
        scope: {equipment: "=?equipment"},
        controller: ["$scope", function (i) {
            i.getRank = function (e) {
                return void 0 == i.$parent.skills[e] ? 0 : i.$parent.skills[e].rank
            }, i.getAbility = function (t) {
                var l = e(t);
                return i.$parent.model[l]
            }, i.isMinion = function () {
                return "minion" == i.$parent.rank
            }
        }],
        replace: !0
    }
}]), app.directive("abilities", ["$sce", function (e) {
    return {
        transclude: !0, restrict: "E", link: function (i, t, l, a, n) {
            n(i, function (i, t) {
                for (var l = "", a = 0; a < i.length; a++) l += i[a].wholeText || i[a].outerHTML;
                t.$parent.model.abilities = e.trustAsHtml(l)
            })
        }
    }
}]), app.directive("weapon", ["$sce", function (e) {
    return {
        transclude: !0,
        reaplce: !0,
        restrict: "E",
        scope: {
            name: "@",
            skill: "@",
            damage: "=",
            critical: "=?",
            range: "@",
            blast: "=?",
            stun: "=?",
            quantity: "=?",
            pierce: "=?",
            vicious: "=?",
            autoFire: "=?autoFire",
            limitedAmmo: "=?ammo"
        },
        link: function (i, t, l, a, n) {
            var s = {
                name: i.name,
                skill: i.skill,
                damage: i.damage,
                critical: i.critical,
                range: i.range,
                blast: i.blast,
                quantity: i.quantity,
                pierce: i.pierce,
                ammo: i.limitedAmmo,
                autoFire: i.autoFire,
                vicious: i.vicious,
                stun: i.stun
            };
            n(i, function (i, t) {
                for (var l = "", a = 0; a < i.length; a++) l += i[a].wholeText || i[a].outerHTML;
                s.text = e.trustAsHtml(l)
            });
            var r = i.$parent.$parent.model;
            null == r.equipment && (r.equipment = {}), null == r.equipment.weapons && (r.equipment.weapons = []), r.equipment.weapons.push(s)
        }
    }
}]), app.directive("detailBlock", function () {
    return {templateUrl: "/views/detailblock.html", scope: {value: "=value", display: "@display"}, replace: !0}
}), app.directive("detailBlockSplit", function () {
    return {
        templateUrl: "/views/detailblocksplit.html",
        scope: {meleeD: "=", rangedD: "=", display: "@display"},
        replace: !0
    }
}), app.directive("detailbar", function () {
    return {templateUrl: "/views/detailbar.html", scope: {model: "=model"}, replace: !0}
}), app.directive("statbar", function () {
    return {templateUrl: "/views/statbar.html", scope: {model: "=model"}, replace: !0}
}), app.directive("die", function () {
    return {templateUrl: "/views/diesymbol.html", scope: {symbol: "@type"}, restrict: "E", replace: !0}
}), app.directive("setback", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "setback"
        }]
    }
}), app.directive("boost", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "boost"
        }]
    }
}), app.directive("ability", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "ability"
        }]
    }
}), app.directive("difficulty", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "difficulty"
        }]
    }
}), app.directive("challenge", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "challenge"
        }]
    }
}), app.directive("proficiency", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "proficiency"
        }]
    }
}), app.directive("success", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "success"
        }]
    }
}), app.directive("failure", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "failure"
        }]
    }
}), app.directive("advantage", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "advantage"
        }]
    }
}), app.directive("threat", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "threat"
        }]
    }
}), app.directive("triumph", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "triumph"
        }]
    }
}), app.directive("despair", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "despair"
        }]
    }
}), app.directive("force", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "force"
        }]
    }
}), app.directive("lightSide", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "lightSide"
        }]
    }
}), app.directive("darkSide", function () {
    return {
        templateUrl: "/views/diesymbol.html",
        replace: !0,
        scope: {},
        restrict: "E",
        controller: ["$scope", function (e) {
            e.symbol = "darkSide"
        }]
    }
}), app.directive("check", function () {
    return {
        templateUrl: "/views/check.html",
        replace: !0,
        scope: {skill: "@skill", dif: "@dif", chg: "@chg"},
        controller: ["$scope", function (e) {
            var i = 0;
            switch (null != e.dif && (i = parseInt(e.dif)), e.difficulty_text = "", e.pdice = new Array(parseInt(i)), e.chg && (e.cdice = new Array(parseInt(e.chg)), i += parseInt(e.chg)), e.dif = i, i) {
                case 0:
                    e.difficulty_text = "Simple";
                    break;
                case 1:
                    e.difficulty_text = "Easy";
                    break;
                case 2:
                    e.difficulty_text = "Average";
                    break;
                case 3:
                    e.difficulty_text = "Hard";
                    break;
                case 4:
                    e.difficulty_text = "Daunting";
                    break;
                default:
                    e.difficulty_text = "Formidable"
            }
        }]
    }
}), app.directive("npc", function () {
    return {
        templateUrl: "/views/npc.html",
        replace: !0,
        transclude: !0,
        scope: {
            model: "=?",
            name: "@",
            rank: "@",
            brawn: "=?",
            agility: "=?",
            intellect: "=?",
            cunning: "=?",
            willpower: "=?",
            presence: "=?",
            wounds: "=?",
            soak: "=?",
            strain: "=?",
            meleeDefense: "=?",
            rangedDefense: "=?"
        },
        controller: ["$scope", function (e) {
            null == e.model && (e.model = {
                name: e.name,
                rank: e.rank || "rival",
                brawn: e.brawn || 1,
                agility: e.agility || 1,
                intellect: e.intellect || 1,
                cunning: e.cunning || 1,
                willpower: e.willpower || 1,
                presence: e.presence || 1,
                wounds: e.wounds || 10,
                soak: e.soak,
                strain: e.strain,
                meleeDefense: e.meleeDefense || 0,
                rangedDefense: e.rangedDefense || 0,
                skills: {}
            })
        }]
    }
}), app.directive("blackbox", function () {
    return {templateUrl: "/views/blackbox.html", replace: !0, transclude: !0, scope: {header: "@title"}}
}), app.directive("narrative", function () {
    return {templateUrl: "/views/redbox.html", replace: !0, transclude: !0, restrict: "E", scope: {header: "@title"}}
});
var skillsTree = function () {
    return [{name: "Astrogation", attribute: "intellect"}, {name: "Athléstisme", attribute: "brawn", alias: "athletics"}, {
        name: "Charm",
        attribute: "presence"
    }, {name: "Coercition", attribute: "willpower", alias: "coercion"}, {name: "Informatique", attribute: "intellect", alias: "computers"}, {
        name: "Calme",
        attribute: "presence", alias: "cool"
    }, {name: "Coordination", attribute: "agility"}, {name: "Tromperie", attribute: "cunning", alias: "deception"}, {
        name: "Sang froid",
        attribute: "willpower", alias: "discipline"
    }, {name: "Commandement", attribute: "presence", alias: "leadership"}, {name: "Mécanique", attribute: "intellect",alias: "mechanics" }, {
        name: "Medicine",
        attribute: "intellect"
    }, {name: "Negotiation", attribute: "presence"}, {
        name: "Perception",
        attribute: "cunning"
    }, {name: "Pilotage (planétaire)", attribute: "agility", alias: "pilotingPlanetary"}, {
        name: "Pilotage (espace)",
        attribute: "agility",
        alias: "pilotingSpace"
    }, {name: "Résistance", attribute: "brawn", alias: "resilience"}, {name: "Magouille", attribute: "cunning", alias: "skulduggery"}, {
        name: "Discretion",
        attribute: "agility", alias: "stealth"
    }, {name: "Système D", attribute: "cunning", alias: "streetwise"}, {name: "Survie", attribute: "cunning", alias: "survival"}, {
        name: "Vigilance",
        attribute: "willpower"
    }, {name: "Pugilat", attribute: "brawn", alias: "brawl"}, {name: "Artillerie", attribute: "agility", alias: "gunnery"}, {
        name: "Corps à corps",
        attribute: "brawn", alias: "melee"
    }, {name: "Distance (léger)", attribute: "agility", alias: "rangedLight"}, {
        name: "Distance (lourd)",
        attribute: "agility",
        alias: "rangedHeavy"
    }, {name: "Mondes du Noyau", attribute: "intellect", alias: "coreWorlds"}, {
        name: "Education",
        attribute: "intellect"
    }, {name: "Culture", attribute: "intellect", alias: "lore"}, {
        name: "Bordure Extérieure",
        attribute: "intellect",
        alias: "outerRim"
    }, {name: "Pègre", attribute: "intellect", alias: "underworld"}, {name: "Xénologie", attribute: "intellect", alias: "xenology"}]
};
app.factory("skillInfo", [function () {
    return skillsTree()
}]), app.service("getSkillStat", ["skillInfo", function (e) {
    return function (i) {
        for (var t = 0; t < e.length; t++) if (e[t].name.toLowerCase() == i.toLowerCase()) return e[t].attribute
    }
}]);
for (var skills = skillsTree(), i = 0; i < skills.length; i++) {
    var name = skills[i].alias;
    null != name && "undefined" != name || (name = skills[i].name.toLowerCase()), addSkillDirective(skills[i].name, skills[i].attribute, name)
}
angular.module("swaor").run(["$templateCache", function (e) {
    e.put("/views/abilities.html", '<div class="npc-abilities"><div class="npc-details-bold">Capacités: </div><div class="npc-details-normal" ng-if="abilities" dynamic="abilities"></div><div class="npc-details-normal" ng-if="!abilities">None.</div></div>'), e.put("/views/blackbox.html", '<div class="cornered blackbox"><h4 ng-if="header">{{header}}</h4><p ng-transclude></p></div>'), e.put("/views/check.html", '<span class="check">{{difficulty_text}} (<span ng-if="dif == 0">-</span><span ng-repeat="c in cdice track by $index"><challenge></span><span ng-repeat="p in pdice track by $index"><difficulty></span>) <span class="skill-name">{{skill}}</span> check</span>'), e.put("/views/defense-block.html", '<div class="vehicle-defense-block"><div class="vehicle-defense-block-title">Def: Av./Port/Starboard/Arr.</div><div class="vehicle-defense-block-fore">{{model.fore}}</div><div class="vehicle-defense-block-port">{{model.port}}</div><div class="vehicle-defense-block-starboard">{{model.starboard}}</div><div class="vehicle-defense-block-aft">{{model.aft}}</div></div>'), e.put("/views/detailbar.html", '<div class="detail-bar"><detail-block ng-if="model.soak" value="model.soak" display="encaissement"></detail-block><detail-block ng-if="model.wounds" value="model.wounds" display="seuil blessure"></detail-block><detail-block ng-if="model.strain" value="model.strain" display="seuil stress"></detail-block><detail-block-split ng-if="model.rangedDefense != 0 || model.meleeDefense != 0" ranged-d="model.rangedDefense" melee-d="model.meleeDefense" display="Def. Cac/Dist"></detail-block-split></div>'), e.put("/views/detailblock.html", '<div class="detail-block"><div class="detail-block-text">{{display}}</div><div class="detail-block-value">{{value}}</div></div>'), e.put("/views/detailblocksplit.html", '<div class="detail-block detail-block-split"><div class="detail-block-text">{{display}}</div><div class="detail-block-value value-left">{{meleeD}}</div><div class="detail-block-value value-right">{{rangedD}}</div></div>'), e.put("/views/diesymbol.html", '<i class="die-symbol" ng-class="symbol"></i>'), e.put("/views/equipment.html", '<div class="npc-equipment"><div class="npc-details-bold">Equipement: </div><div class="npc-details-normal" ng-if="equipment && equipment.weapons" ng-repeat="item in equipment.weapons"><span class="weapon-name"><span ng-if="item.quantity">{{item.quantity}} </span>{{item.name}} </span><span class="weapon-details">(<skill hide-rank="true" name="item.skill" rank="getRank(item.skill)" abty="getAbility(item.skill)" minion="isMinion()"></skill>; Dégâts: {{item.damage}}; Crit: {{item.critical}}; Portée [<span class="weapon-range">{{item.range}}</span>]; <span ng-if="item.pierce">Pierce {{item.pierce}};</span> <span ng-if="item.blast">Souffle {{item.blast}};</span> <span ng-if="item.vicious">Vicieux {{item.vicious}};</span> <span ng-if="item.ammo">Muni. limitées {{item.ammo}};</span> <span ng-if="item.autoFire">Automatique;</span> <span ng-if="item.stun">Réglage étourdissant</span> <span dynamic="item.text"></span>)</span> <span ng-if="!$last">, </span><span ng-if="$last">.</span></div><div class="npc-details-normal" ng-if="!equipment">None.</div></div>'), e.put("/views/npc.html", '<div class="npc-wrapper"><h4 ng-if="model.name">{{model.name}} <span ng-if="model.rank">[{{model.rank}}]</span></h4><statbar model="model"></statbar><detailbar model="model"></detailbar><ng-transclude></ng-transclude><skills-block></skills-block><talent-block talents="model.talents"></talent-block><abilities-block abilities="model.abilities"></abilities-block><equipment-block equipment="model.equipment"></equipment-block></div>'), e.put("/views/planet.html", '<md-slider-container><div flex="10" layout layout-align="center center"><span class="md-body-1">Scarcity</span></div><md-slider flex md-discrete ng-model="item" step="1" min="-2" max="4" aria-label="Scarcity"></md-slider><scarcity-display value="item" flex></scarcity-display></md-slider-container>'), e.put("/views/rarity.html", '<md-slider-container><div flex="10" layout layout-align="center center"><span class="md-body-1">Rarity</span></div><md-slider flex md-discrete ng-model="item" step="1" min="1" max="10" aria-label="Rarity"></md-slider><md-input-container><input disabled="disabled" flex type="number" ng-model="item" aria-label="green" aria-controls="green-slider"></md-input-container></md-slider-container>'), e.put("/views/redbox.html", '<div class="center-children redbox-wrapper"><div class="cornered redbox"><p ng-transclude></p></div></div>'), e.put("/views/scarcityDisplay.html", '<md-icon md-svg-src="{{scarcityIcon()}}" class="name"></md-icon><span flex>{{scarcityText()}}</span>'), e.put("/views/skill.html", '<span class="skill"><span class="skill-name">{{name}}</span> <span ng-if="!minion"><span ng-if="!hideRank">{{rank}}</span> (<span ng-repeat="p in pdice track by $index"><proficiency></proficiency></span><span ng-repeat="a in adice track by $index"><ability></ability></span>)</span><span ng-if="minion"> (fonction du nombre)</span></span>'), e.put("/views/skills.html", '<div class="npc-skills"><div class="npc-details-bold" ng-if="char.rank != \'minion\'">Compétences: </div><div class="npc-details-bold" ng-if="char.rank == \'minion\'">Compétences (de groupe): </div><div class="npc-details-normal" ng-repeat="key in skillKeys()"><skill name="key" rank="skills[key].rank" abty="getAttr(key)" minion="char.rank == \'minion\'"></skill><span ng-if="!$last">,</span><span ng-if="$last">.</span></div><div class="npc-details-normal" ng-if="skillKeys().length === 0">None.</div></div>'), e.put("/views/starship-weapon.html", '<div class="npc-equipment"><div class="npc-details-bold">Armes: </div><div class="npc-details-normal" ng-if="weapons" ng-repeat="item in weapons"><span class="weapon-name">{{item.name}} </span><span class="weapon-details">(Arc de tir {{item.fireArc}}; Dégâts: {{item.damage}}; Crit.: {{item.critical}}; Portée [<span class="weapon-range">{{item.range}}</span>]; <span ng-if="item.linked">Jumelé {{item.linked}};</span> <span ng-if="item.blast">Souffle {{item.blast}};</span> <span ng-if="item.breach">Brêche {{item.breach}};</span> <span ng-if="item.guided">Guidé {{item.guided}};</span> <span ng-if="item.ammo">Muni. limitées {{item.ammo}};</span> <span ng-if="item.slowFiring">Cadence lente {{item.slowFiring}};</span> <span ng-if="item.ion">Ionique;</span><span dynamic="item.text"></span>)</span><br></div><div class="npc-details-normal" ng-if="!weapons">None.</div></div>'), e.put("/views/statbar.html", '<div class="stat-bar"><statblock display="Vigueur" value="model.brawn"></statblock><statblock display="Agilité" value="model.agility"></statblock><statblock display="Intelligence" value="model.intellect"></statblock><statblock display="Ruse" value="model.cunning"></statblock><statblock display="Volonté" value="model.willpower"></statblock><statblock display="Présence" value="model.presence"></statblock></div>'), e.put("/views/statblock.html", '<div class="stat-block"><div class="stat-block-value">{{value}}</div><div class="stat-block-text">{{display}}</div></div>'), e.put("/views/talents.html", '<div class="npc-talents"><div class="npc-details-bold">Talents: </div><div class="npc-details-normal" ng-if="talents" dynamic="talents"></div><div class="npc-details-normal" ng-if="!talents">None.</div></div>'), e.put("/views/vehicle-statbar.html", '<div class="vehicle-stat-bar"><div class="vehicle-stat-core"><statblock display="Gabarit" value="model.silhouette"></statblock><statblock display="Vitesse" value="model.speed"></statblock><statblock display="Maniabilité" value="model.handling"></statblock></div><div class="vehicle-stat-attributes"><defense-block model="model"></defense-block><detail-block value="model.armor" display="Blindage"></detail-block><detail-block value="model.system" display="Stress Méca."></detail-block><detail-block value="model.hull" display="Dégâts Coque"></detail-block></div></div>'), e.put("/views/vehicle.html", '<div class="starship-wrapper"><h4 ng-if="model.name">{{model.name}}</h4><vehicle-statbar model="model"></vehicle-statbar><ng-transclude></ng-transclude><div class="npc-equipment" ng-if="model.type"><div class="npc-details-bold">Type<span ng-if="model.ship">/Classe</span>:</div><div class="npc-details-normal">{{model.type}}<span ng-if="model.ship">/{{model.ship}}</span></div></div><div class="npc-equipment" ng-if="model.maker"><div class="npc-details-bold">Constructeur: </div><div class="npc-details-normal">{{model.maker}}</div></div><div class="npc-equipment"><div class="npc-details-bold">Hyperdrive: </div><div class="npc-details-normal">{{model.hyperdrive}}</div></div><div class="npc-equipment"><div class="npc-details-bold">Ordinateur de navigation: </div><div class="npc-details-normal">{{model.navicomputer}}</div></div><div class="npc-equipment"><div class="npc-details-bold">Portée capteurs: </div><div class="npc-details-normal">{{model.sensorRange}}</div></div><div class="npc-equipment"><div class="npc-details-bold">Équipage: </div><div class="npc-details-normal">{{model.crew}}</div></div><div class="npc-equipment"><div class="npc-details-bold">Capacité d\'encombrement: </div><div class="npc-details-normal">{{model.encum}}</div></div><div class="npc-equipment"><div class="npc-details-bold">Passagers: </div><div class="npc-details-normal">{{model.passengers}}</div></div><div class="npc-equipment" ng-if="model.consumables"><div class="npc-details-bold">Provisions: </div><div class="npc-details-normal">{{model.consumables}}</div></div><div class="npc-equipment" ng-if="model.price"><div class="npc-details-bold">Prix<span ng-if="model.rarity">/Rarété</span>: </div><div class="npc-details-normal">{{model.price}} crédits<span ng-if="model.rarity">/{{model.rarity}}</span></div></div><div class="npc-equipment"><div class="npc-details-bold">Emplacements de customization: </div><div class="npc-details-normal">{{model.hardpoints}}</div></div><starship-weapons-block weapons="model.weapons"></starship-weapons-block></div>')
}]);